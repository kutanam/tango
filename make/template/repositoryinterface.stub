package repository

import (
	"context"

	"github.com/payfazz/go-apt/pkg/fazzdb"
)

// {{model}}RepositoryInterface contract for {{camelModel}} repository
type {{model}}RepositoryInterface interface {
	GetQuery(ctx context.Context) (*fazzdb.Query, error)
	RawSelect(ctx context.Context, sample interface{}, query string, payload ...interface{}) (interface{}, error)
    RawExec(ctx context.Context, query string, payload ...interface{}) (bool, error)
	FindAll(ctx context.Context, conditions []fazzdb.SliceCondition, orders []fazzdb.Order, limit int, offset int) ([]*model.{{model}}, error)
	FindOne(ctx context.Context, conditions []fazzdb.SliceCondition, orders []fazzdb.Order) (*model.{{model}}, error)
	Find(ctx context.Context, id {{idDataType}}) (*model.{{model}}, error)
	Create(ctx context.Context, m fazzdb.ModelInterface) (*{{idDataType}}, error)
	Update(ctx context.Context, m fazzdb.ModelInterface) (bool, error)
	Delete(ctx context.Context, m fazzdb.ModelInterface) (bool, error)
}